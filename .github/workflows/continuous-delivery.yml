name: CD

on:
  push:
    branches: [ main ]

jobs:
#   discovery:
#     name: Discovery service
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repo
#       uses: actions/checkout@v2

#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         java-version: '11'
#         distribution: 'adopt'
    
#     - name: Test
#       run: mvn surefire:test --file ./back-end/discovery/pom.xml
        
#     - name: Build
#       run: mvn spring-boot:build-info --file ./back-end/discovery/pom.xml
      
#     - name: Build docker image
#       run: mvn spring-boot:build-image --file ./back-end/discovery/pom.xml
      
#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with: 
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
    
#     - name: Push to DockerHub
#       run: docker push gza73/simple-app-react-spring-jwt-back-end-discovery:latest
    
#   gateway:
#     name: Gateway service
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repo
#       uses: actions/checkout@v2

#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         java-version: '11'
#         distribution: 'adopt'
    
#     - name: Test
#       run: mvn surefire:test --file ./back-end/gateway/pom.xml
        
#     - name: Build
#       run: mvn spring-boot:build-info --file ./back-end/gateway/pom.xml
      
#     - name: Build docker image
#       run: mvn spring-boot:build-image --file ./back-end/gateway/pom.xml
      
#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with: 
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
    
#     - name: Push to DockerHub
#       run: docker push gza73/simple-app-react-spring-jwt-back-end-gateway:latest
      
#   user-service:
#     name: User service
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repo
#       uses: actions/checkout@v2

#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         java-version: '11'
#         distribution: 'adopt'
    
#     - name: Test
#       run: mvn surefire:test --file ./back-end/user-service/pom.xml
        
#     - name: Build
#       run: mvn spring-boot:build-info --file ./back-end/user-service/pom.xml
      
#     - name: Build docker image
#       run: mvn spring-boot:build-image --file ./back-end/user-service/pom.xml
      
#     - name: Login to Docker Hub
#       uses: docker/login-action@v1
#       with: 
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
    
#     - name: Push to DockerHub
#       run: docker push gza73/simple-app-react-spring-jwt-back-end-user-service:latest
  
  front-end:
    name: Front-end
    runs-on: ubuntu-latest
    env:
      working-directory: ./front-end
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Use Node.js '14.x'
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm install
        working-directory: ${{ env.working-directory }}

      - name: Test
        run: npm ci
        working-directory: ${{ env.working-directory }}
        
      - name: Build
        run: npm run build --if-present
        working-directory: ${{ env.working-directory }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build docker image
        run: docker build -t gza73/simple-app-react-spring-jwt-front-end:latest .
        working-directory: ${{ env.working-directory }}
        
      - name: Push to DockerHub
        run: docker push gza73/simple-app-react-spring-jwt-front-end:latest
        working-directory: ${{ env.working-directory }}
